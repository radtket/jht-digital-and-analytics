{"version":3,"sources":["scripts/index.js"],"names":["window","addEventListener","scrollTop","Math","round","scrollY","topnav","document","querySelector","classList","add","remove","makeNavLinksSmooth","navLinks","querySelectorAll","Object","values","forEach","item","e","preventDefault","hash","scrollIntoView","behavior","spyScrolling","sections","onscroll","scrollPos","documentElement","body","offsetTop","id","intervalId","setInterval","pageYOffset","clearInterval","scroll","modalTriggers","trigger","modal","getElementById","dataset","modalFor","hasAttribute","showModal","close"],"mappings":";;;;;AA0DA,aA1DA,QAAA,iBACA,QAAA,wBAGAA,OAAOC,iBAAiB,SAAU,WAC1BC,IAAAA,EAAYC,KAAKC,MAAMJ,OAAOK,SAC9BC,EAASC,SAASC,cAAc,WAClCN,EAAY,GACdI,EAAOG,UAAUC,IAAI,gBAErBJ,EAAOG,UAAUE,OAAO,kBAI5B,IAAMC,EAAqB,WACnBC,IAAAA,EAAWN,SAASO,iBAAiB,eAC3CC,OAAOC,OAAOH,GAAUI,QAAQ,SAAAC,GAC9BA,EAAKjB,iBAAiB,QAAS,SAAAkB,GAC7BA,EAAEC,iBACFb,SAASC,cAAcU,EAAKG,MAAMC,eAAe,CAC/CC,SAAU,gBAMZC,EAAe,WACbC,IAAAA,EAAWlB,SAASO,iBAAiB,iBAE3Cd,OAAO0B,SAAW,WACVC,IAAAA,EACJpB,SAASqB,gBAAgB1B,WAAaK,SAASsB,KAAK3B,UACtDa,OAAOC,OAAOS,GAAUR,QAAQ,SAAuB,GAApBa,IAAAA,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,GACxCD,GAAaH,IACfpB,SAASC,cAAc,WAAWC,UAAUE,OAAO,UACnDJ,SAASC,cAAyBuB,WAAAA,OAAAA,EAAOtB,MAAAA,UAAUC,IAAI,eAM/DE,IACAY,IAEA,IAAIQ,EAAa,EAEjBzB,SAASC,cAAc,WAAWP,iBAAiB,QAAS,WAC1D+B,EAAaC,YAAY,WACI,IAAvBjC,OAAOkC,aACTC,cAAcH,GAEhBhC,OAAOoC,OAAO,EAAGpC,OAAOkC,YAAc,KACrC,SAIL,IAAMG,EAAgB9B,SAASO,iBAA/B,oBAEAC,OAAOC,OAAOqB,GAAepB,QAAQ,SAAAqB,GAC7BC,IAAAA,EAAQhC,SAASiC,eAAeF,EAAQG,QAAQC,UACtDJ,EAAQrC,iBAAiB,QAAS,WAC5BqC,EAAQK,aAAa,UACvBJ,EAAMK,YACNrC,SAASC,cAAc,QAAQC,UAAUC,IAAI,gBAG3C4B,EAAQK,aAAa,WACvBJ,EAAMM,QACNtC,SAASC,cAAc,QAAQC,UAAUE,OAAO","file":"scripts.d03e0551.js","sourceRoot":"../src","sourcesContent":["import \"normalize.css\";\nimport \"../styles/index.scss\";\n\n// Navbar Scroll\nwindow.addEventListener(\"scroll\", () => {\n  const scrollTop = Math.round(window.scrollY);\n  const topnav = document.querySelector(\".topnav\");\n  if (scrollTop > 49) {\n    topnav.classList.add(\"topnav-fixed\");\n  } else {\n    topnav.classList.remove(\"topnav-fixed\");\n  }\n});\n\nconst makeNavLinksSmooth = () => {\n  const navLinks = document.querySelectorAll(\".scoll-link\");\n  Object.values(navLinks).forEach(item => {\n    item.addEventListener(\"click\", e => {\n      e.preventDefault();\n      document.querySelector(item.hash).scrollIntoView({\n        behavior: \"smooth\",\n      });\n    });\n  });\n};\n\nconst spyScrolling = () => {\n  const sections = document.querySelectorAll(\".page-section\");\n\n  window.onscroll = () => {\n    const scrollPos =\n      document.documentElement.scrollTop || document.body.scrollTop;\n    Object.values(sections).forEach(({ offsetTop, id }) => {\n      if (offsetTop <= scrollPos) {\n        document.querySelector(\".active\").classList.remove(\"active\");\n        document.querySelector(`a[href*=${id}]`).classList.add(\"active\");\n      }\n    });\n  };\n};\n\nmakeNavLinksSmooth();\nspyScrolling();\n\nlet intervalId = 0; // Needed to cancel the scrolling when we're at the top of the page\n\ndocument.querySelector(\".scroll\").addEventListener(\"click\", () => {\n  intervalId = setInterval(() => {\n    if (window.pageYOffset === 0) {\n      clearInterval(intervalId);\n    }\n    window.scroll(0, window.pageYOffset - 50);\n  }, 16.66);\n});\n\n// Modal\nconst modalTriggers = document.querySelectorAll(`[data-modal-for]`);\n\nObject.values(modalTriggers).forEach(trigger => {\n  const modal = document.getElementById(trigger.dataset.modalFor);\n  trigger.addEventListener(\"click\", () => {\n    if (trigger.hasAttribute(\"open\")) {\n      modal.showModal();\n      document.querySelector(\"body\").classList.add(\"scroll-lock\");\n    }\n\n    if (trigger.hasAttribute(\"close\")) {\n      modal.close();\n      document.querySelector(\"body\").classList.remove(\"scroll-lock\");\n    }\n  });\n});\n"]}